;; Auto-generated. Do not edit!


(when (boundp 'bwi_msgs::LogicalActionResult)
  (if (not (find-package "BWI_MSGS"))
    (make-package "BWI_MSGS"))
  (shadow 'LogicalActionResult (find-package "BWI_MSGS")))
(unless (find-package "BWI_MSGS::LOGICALACTIONRESULT")
  (make-package "BWI_MSGS::LOGICALACTIONRESULT"))

(in-package "ROS")
;;//! \htmlinclude LogicalActionResult.msg.html
(if (not (find-package "BWI_PLANNING_COMMON"))
  (ros::roseus-add-msgs "bwi_planning_common"))


(defclass bwi_msgs::LogicalActionResult
  :super ros::object
  :slots (_success _status _observations ))

(defmethod bwi_msgs::LogicalActionResult
  (:init
   (&key
    ((:success __success) nil)
    ((:status __status) "")
    ((:observations __observations) (let (r) (dotimes (i 0) (push (instance bwi_planning_common::PlannerAtom :init) r)) r))
    )
   (send-super :init)
   (setq _success __success)
   (setq _status (string __status))
   (setq _observations __observations)
   self)
  (:success
   (&optional __success)
   (if __success (setq _success __success)) _success)
  (:status
   (&optional __status)
   (if __status (setq _status __status)) _status)
  (:observations
   (&rest __observations)
   (if (keywordp (car __observations))
       (send* _observations __observations)
     (progn
       (if __observations (setq _observations (car __observations)))
       _observations)))
  (:serialization-length
   ()
   (+
    ;; bool _success
    1
    ;; string _status
    4 (length _status)
    ;; bwi_planning_common/PlannerAtom[] _observations
    (apply #'+ (send-all _observations :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _success
       (if _success (write-byte -1 s) (write-byte 0 s))
     ;; string _status
       (write-long (length _status) s) (princ _status s)
     ;; bwi_planning_common/PlannerAtom[] _observations
     (write-long (length _observations) s)
     (dolist (elem _observations)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _success
     (setq _success (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; string _status
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _status (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bwi_planning_common/PlannerAtom[] _observations
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _observations (let (r) (dotimes (i n) (push (instance bwi_planning_common::PlannerAtom :init) r)) r))
     (dolist (elem- _observations)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get bwi_msgs::LogicalActionResult :md5sum-) "4b369ca08113322eccf2b5371446d8fc")
(setf (get bwi_msgs::LogicalActionResult :datatype-) "bwi_msgs/LogicalActionResult")
(setf (get bwi_msgs::LogicalActionResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
bool success
string status
bwi_planning_common/PlannerAtom[] observations

================================================================================
MSG: bwi_planning_common/PlannerAtom
string name
string[] value

")



(provide :bwi_msgs/LogicalActionResult "4b369ca08113322eccf2b5371446d8fc")


